/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonColor, ButtonSize } from "./types/gf-button";
export namespace Components {
    interface GfButton {
        "_internal": () => Promise<void>;
        "circle": boolean;
        "classNames": string;
        "color": ButtonColor;
        "disabled": boolean;
        "nativeType": string;
        "plain": boolean;
        "size": ButtonSize;
        "textColor": string;
    }
    interface GfButtonGroup {
    }
    interface GfIconClear {
        "color"?: string;
        "opacity"?: number | string;
        "rotate"?: number;
        "size": number | string;
        "spin"?: boolean;
        "styles"?: object;
    }
    interface GfInput {
        "clearable": boolean;
        "disabled": boolean;
        "maxlength"?: number;
        "type": string;
        "value": string;
    }
    interface StenButton {
        /**
          * **********************     装饰器 Start     * *******************
         */
        "name": string;
        "show": () => Promise<void>;
    }
}
declare global {
    interface HTMLGfButtonElement extends Components.GfButton, HTMLStencilElement {
    }
    var HTMLGfButtonElement: {
        prototype: HTMLGfButtonElement;
        new (): HTMLGfButtonElement;
    };
    interface HTMLGfButtonGroupElement extends Components.GfButtonGroup, HTMLStencilElement {
    }
    var HTMLGfButtonGroupElement: {
        prototype: HTMLGfButtonGroupElement;
        new (): HTMLGfButtonGroupElement;
    };
    interface HTMLGfIconClearElement extends Components.GfIconClear, HTMLStencilElement {
    }
    var HTMLGfIconClearElement: {
        prototype: HTMLGfIconClearElement;
        new (): HTMLGfIconClearElement;
    };
    interface HTMLGfInputElement extends Components.GfInput, HTMLStencilElement {
    }
    var HTMLGfInputElement: {
        prototype: HTMLGfInputElement;
        new (): HTMLGfInputElement;
    };
    interface HTMLStenButtonElement extends Components.StenButton, HTMLStencilElement {
    }
    var HTMLStenButtonElement: {
        prototype: HTMLStenButtonElement;
        new (): HTMLStenButtonElement;
    };
    interface HTMLElementTagNameMap {
        "gf-button": HTMLGfButtonElement;
        "gf-button-group": HTMLGfButtonGroupElement;
        "gf-icon-clear": HTMLGfIconClearElement;
        "gf-input": HTMLGfInputElement;
        "sten-button": HTMLStenButtonElement;
    }
}
declare namespace LocalJSX {
    interface GfButton {
        "circle"?: boolean;
        "classNames"?: string;
        "color"?: ButtonColor;
        "disabled"?: boolean;
        "nativeType"?: string;
        "onOn-click"?: (event: CustomEvent<{ data: Object }>) => void;
        "plain"?: boolean;
        "size"?: ButtonSize;
        "textColor"?: string;
    }
    interface GfButtonGroup {
    }
    interface GfIconClear {
        "color"?: string;
        "opacity"?: number | string;
        "rotate"?: number;
        "size"?: number | string;
        "spin"?: boolean;
        "styles"?: object;
    }
    interface GfInput {
        "clearable"?: boolean;
        "disabled"?: boolean;
        "maxlength"?: number;
        "onOnBlur"?: (event: CustomEvent<HTMLAreaElement>) => void;
        "onOnChange"?: (event: CustomEvent<string>) => void;
        "onOnClear"?: (event: CustomEvent<string>) => void;
        "onOnFocus"?: (event: CustomEvent<FocusEvent>) => void;
        "onOnInput"?: (event: CustomEvent<string>) => void;
        "type"?: string;
        "value"?: string;
    }
    interface StenButton {
        /**
          * **********************     装饰器 Start     * *******************
         */
        "name"?: string;
        "onStenButton-show"?: (event: CustomEvent<{ name: string }>) => void;
    }
    interface IntrinsicElements {
        "gf-button": GfButton;
        "gf-button-group": GfButtonGroup;
        "gf-icon-clear": GfIconClear;
        "gf-input": GfInput;
        "sten-button": StenButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gf-button": LocalJSX.GfButton & JSXBase.HTMLAttributes<HTMLGfButtonElement>;
            "gf-button-group": LocalJSX.GfButtonGroup & JSXBase.HTMLAttributes<HTMLGfButtonGroupElement>;
            "gf-icon-clear": LocalJSX.GfIconClear & JSXBase.HTMLAttributes<HTMLGfIconClearElement>;
            "gf-input": LocalJSX.GfInput & JSXBase.HTMLAttributes<HTMLGfInputElement>;
            "sten-button": LocalJSX.StenButton & JSXBase.HTMLAttributes<HTMLStenButtonElement>;
        }
    }
}
